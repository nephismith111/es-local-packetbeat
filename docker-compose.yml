version: "3.9"
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.1
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - network.host=0.0.0.0
      - node.name=es01
      - ES_JAVA_OPTS=-Xms4g -Xmx4g
    ports:
      - "${ELASTIC_PORT:-9200}:9200"
    mem_limit: 8192m
    network_mode: host
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -q '\"status\":\"green\"'"]
      interval: 15s
      timeout: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:8.16.1
    environment:
      - ELASTICSEARCH_HOSTS=http://localhost:9200
    network_mode: host
    depends_on:
      elasticsearch:
        condition: service_healthy
    # networks:
    #   - elastic
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601/api/status"]
      interval: 15s
      timeout: 10s
      retries: 5

  packetbeat-dashboards:
    image: docker.elastic.co/beats/packetbeat:8.16.1
    command: setup --dashboards
    user: root
    cap_add:
      - NET_ADMIN
      - NET_RAW
    network_mode: host
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
  packetbeat:
    image: docker.elastic.co/beats/packetbeat:8.16.1
    network_mode: host
    user: root
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - ./packetbeat.yml:/usr/share/packetbeat/packetbeat.yml
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
    restart: unless-stopped
  

# networks:
#   elastic:
#     driver: bridge

# volumes:
#   elasticsearch-data:
